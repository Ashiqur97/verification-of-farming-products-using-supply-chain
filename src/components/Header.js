import React, { useState, useRef } from 'react';
import { FaFileDownload, FaTimes, FaCheckCircle, FaCertificate } from 'react-icons/fa';

const Header = () => {
  const [showReportModal, setShowReportModal] = useState(false);
  const [productName, setProductName] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [reportGenerated, setReportGenerated] = useState(false);
  const reportRef = useRef();

  const handleGenerateReport = (e) => {
    e.preventDefault();
    if (!productName.trim()) return;
    
    setIsGenerating(true);
    
    // Simulate report generation delay
    setTimeout(() => {
      setIsGenerating(false);
      setReportGenerated(true);
    }, 1500);
  };

  const handleDownloadReport = () => {
    // Create report content
    const reportContent = `
AGRI-CHAIN PRODUCT AUTHENTICITY REPORT
======================================

Product Name: ${productName}
Report Generated: ${new Date().toLocaleDateString()}
Report ID: AGRI-${Math.floor(Math.random() * 1000000)}

PRODUCT VERIFICATION STATUS: âœ… AUTHENTIC & SAFE

SUPPLY CHAIN JOURNEY:
----------------------
1. Farming Stage: 
   - Location: Certified Organic Farm
   - Harvest Date: ${new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toLocaleDateString()}
   - Farmer ID: FARM-${Math.floor(Math.random() * 1000)}
   - Certification: Organic Certified

2. Processing Stage:
   - Facility: Certified Processing Center
   - Processing Date: ${new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toLocaleDateString()}
   - Quality Check: Passed
   - Batch ID: BATCH-${Math.floor(Math.random() * 10000)}

3. Distribution Stage:
   - Distributor: Certified Supply Chain Partner
   - Transport Date: ${new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toLocaleDateString()}
   - Temperature Control: Maintained
   - Transport ID: TRANS-${Math.floor(Math.random() * 1000)}

4. Retail Stage:
   - Retailer: Certified Store Partner
   - Shelf Date: ${new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toLocaleDateString()}
   - Quality Check: Passed
   - Store ID: STORE-${Math.floor(Math.random() * 100)}

QUALITY ASSURANCE:
------------------
âœ… Pesticide Levels: Within Safe Limits
âœ… Heavy Metals: Not Detected
âœ… Microbial Contamination: None
âœ… Freshness Index: Excellent
âœ… Nutritional Value: As Labeled

BLOCKCHAIN VERIFICATION:
----------------------
Transaction Hash: 0x${Math.random().toString(16).substr(2, 64)}
Block Number: ${Math.floor(Math.random() * 1000000)}
Timestamp: ${new Date().toISOString()}
Verification Status: Immutable & Tamper-Proof

CONSUMER SAFETY GUARANTEE:
----------------------------
This product has been verified at every stage of the supply chain using blockchain technology. 
All data is immutable and transparently recorded, ensuring complete authenticity and safety.

For more information, scan the QR code on the product packaging or visit our verification portal.

Report generated by AgriChain Blockchain System
Â© 2025 AgriChain - Revolutionizing Food Safety
    `.trim();

    // Create a blob and download link
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${productName.replace(/\s+/g, '_')}_Authenticity_Report.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    // Reset the form
    setProductName('');
    setReportGenerated(false);
    setShowReportModal(false);
  };

  return (
    <>
      <header className="bg-white shadow p-4 flex justify-between items-center">
        <h1 className="text-xl font-bold text-green-700">Blockchain Food Supply Chain</h1>
        <div className="flex items-center space-x-4">
          <span className="text-gray-600">Welcome, User ðŸ‘¤</span>
          <button 
            onClick={() => setShowReportModal(true)}
            className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg flex items-center transition-colors"
          >
            <FaFileDownload className="mr-2" />
            Generate Report
          </button>
        </div>
      </header>

      {/* Report Modal */}
      {showReportModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl shadow-xl w-full max-w-md" ref={reportRef}>
            <div className="p-6">
              <div className="flex justify-between items-center mb-6">
                <h2 className="text-2xl font-bold text-green-700 flex items-center">
                  <FaCertificate className="mr-2" />
                  Product Authenticity Report
                </h2>
                <button 
                  onClick={() => {
                    setShowReportModal(false);
                    setProductName('');
                    setReportGenerated(false);
                  }}
                  className="text-gray-500 hover:text-gray-700"
                >
                  <FaTimes />
                </button>
              </div>

              {!reportGenerated ? (
                <form onSubmit={handleGenerateReport}>
                  <div className="mb-6">
                    <label className="block text-gray-700 font-semibold mb-2">
                      Enter Product Name
                    </label>
                    <input
                      type="text"
                      value={productName}
                      onChange={(e) => setProductName(e.target.value)}
                      placeholder="e.g., Rice, Wheat, Tomatoes..."
                      className="w-full border rounded-lg px-4 py-3 focus:ring-2 focus:ring-green-400 focus:border-transparent"
                      required
                    />
                    <p className="text-sm text-gray-500 mt-2">
                      We'll give you comprehensive authenticity report for this product
                    </p>
                  </div>

                  <button
                    type="submit"
                    disabled={isGenerating || !productName.trim()}
                    className={`w-full py-3 rounded-lg font-semibold flex items-center justify-center ${
                      isGenerating || !productName.trim()
                        ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                        : 'bg-green-600 hover:bg-green-700 text-white'
                    }`}
                  >
                    {isGenerating ? (
                      <>
                        <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                          <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                          <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        Generating Report...
                      </>
                    ) : (
                      <>
                        <FaFileDownload className="mr-2" />
                        Generate Authenticity Report
                      </>
                    )}
                  </button>
                </form>
              ) : (
                <div className="text-center py-6">
                  <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    <FaCheckCircle className="text-green-600 text-3xl" />
                  </div>
                  <h3 className="text-xl font-bold text-gray-800 mb-2">Report Generated Successfully!</h3>
                  <p className="text-gray-600 mb-6">
                    Your authenticity report for <span className="font-semibold">{productName}</span> is ready to download.
                  </p>
                  <button
                    onClick={handleDownloadReport}
                    className="bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-lg font-semibold flex items-center justify-center mx-auto"
                  >
                    <FaFileDownload className="mr-2" />
                    Download Report
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default Header;